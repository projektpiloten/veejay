



    10x0            0x     x10x0x10x0x10x   10x0x10x0x10x0        x0x1         x0x1       10x0        x0x1
  0x10x0            0x0x   x10x0x10x0x10x   10x0x10x0x10x0        x0x1       10x0x10x      10x0x1    10x0x1
0x0x10              0x0x10 x10x             10x0                  x0x1       10x0x10x       x0x10x  10x0
0x0x10x0            0x0x10 x10x0x10x0x1	    10x0x10x0x10          x0x1     0x10    0x0        x10x0x10
  0x10x0          x10x0x   x10x0x10x0x10x   10x0x10x0x10          x0x1     0x10x0x10x0        x10x0x10
    10x0x1      x0x10x     x10x             10x0                  x0x1     0x10x0x10x0          0x0x
      x0x10x0x10x0x1       x10x             10x0            x10x   x0x1    0x10x0x10x0x10       0x0x
        x10x0x10x0         x10x0x10x0x10x   10x0x10x0x10x0  x10x  10x0    0x0x        0x10      0x0x
          0x0x10           x10x0x10x0x10x   10x0x10x0x10x0    0x010x0     0x0x        0x10      0x0x    

									              version 1.5	
												  June 2015

       =================================================================================================
 
 			 :: 	   Veejay, a visual instrument for GNU            ::
					   http://veejayhq.net
		                         http://veejay.dyne.org 
	


 Veejay - a 'visual' instrument and realtime video sampler

Veejay is a visual instrument and real-time video sampler.
It allows you to "play" the video like you would play a piano.
While playing, you can record the resulting video directly to disk (video sampling).


====== quick install:

   order of packages:
    veejay-server, veejay-client, veejay-utils, plugin-packs

   for each package:
     ./autogen.sh
     ./configure
     make && make install

   to build for a specific target:
     ./configure --with-arch-target=generic|core2|k6|native|i686


   if you want to debug veejay-server (or if you want to submit a meaningful backtrace), build with:

     ./configure --enable-debug


   to build plugins:

   cd veejay-sever/livido-plugins
   ./RUNME.sh /tmp/plugins

   install the plugins in your home-dir:

   mkdir ~/.veejay    # or start veejay 
   echo "/tmp/plugins" >> ~/.veejay/plugins.cfg


   install GMIC, 

   cd plugin-packs/lvdgmic
   ./autogen.sh
   ./configure && make 




FEATURE OVERVIEW

General
-------
 # Free Software (GNU GPL) (1)
 # Servent architecture (2)
 # Soft realtime (3)
 # Frame accurate (4)
 # Loop based editing (5)
 # Native YUV processing
 # Crash recovery

Media
-----
 # Codecs: MJPEG,MPNG, DV, YUV (raw)
 # Containers: AVI , Quicktime, rawDV
 # Devices: USB webcams, DV1394, TV capture cards, etc.
 # Support for unlimited capture devices
 # Support for Image files (PNG ,JPEG,TIFF,etc)

Editing
-------
 # 132 built-in FX , many unique and original FX filters 
 # 41 Livido filters
 # FX chain (20 slots)
 # All FX parameters can be animated.
 # Mix up to two layers per FX slot
 # Non destructive edit decision lists (cut/copy/paste/crop video)
 # Simple text editor 
 # Sample editor
 # Sequence editor
 # Live disk recorder (sampling)
 # Full deck save/restore
 # Live clip loading 
 # Live sample sequencing



Trickplay
---------
 # VIMS event recording/playback (6)
 # Various looping modes including bounce looping
 # Playback speed and direction
 # Video scratching
 # Change in-and out points of a sample (marker)
 # Slow motion audio / video (7)
 # Fast motion audio / video
 # Dynamic framerate 
 # Random frame play
 # Random sample play
 # Access up to 4096 video samples instantly	

Output
------
 # Audio trough Jack (low latency audio server) (8)
 # SDL and OpenGL video
 # Headless
 # YUV4MPEG streaming
 # Network streaming (unicast and multicast)
 # Preview rendering

Interaction
-----------
 # Programmable keyboard interface
 # VIMS (tcp/ip) 
 # OSC (udp)
 # PureData trough sendVIMS external

Viewing
-------
 # Full screen or windowed mode
 # Perspective and foward projection (9)
 

Additional
----------
 # Support for FreeFrame plugins (only for 32 bit systems!)
 # Support for Frei0r plugins
 # Support for LiVIDO plugins





(1)	Free Software
	A matter of liberty, not price. You should think of  “free” as in free speech.
	Free software is the matter of the users freedom to run, copy, distribute, study, change and improve the software. 

(2)	A servent architecture is a peer-to-peer network mode with both functionalities of a
	server and a client. The setup is designed so that each veejay-node can send and receive video, 
	allowing for the creation and maintenance of ad-hoc veejay-networks.
	Reloaded , veejay's graphical interface, is a thin client and can be run from another computer
	to track one or more veejay servers.

(3)	Soft realtime: A system is realtime if the correctness of the application not only depends on
	the logical correctness but also upon the time at which it was performed.
	Veejay tolerates such lateness and responds by dropping video frames. 
	You can instruct veejay to ignore the time aspect of the video and render all frames, effectivly 
	turning the server into a frame producer.

(4)	VIMS: Veejay Internal Message System.  Control data is distributed via this message system,
	each message consists of an 'event selector' with a list of arguments.  VIMS is the lowest
	level control interface available. The keyboard interface and OSC server are built on top of it.
	Also all veejay clients communicate usings VIMS.

(5)	Loop based editing:  Loops are (short) sections of video (up to any length) that are repeated 
	continuously. While playing, you can change the properties of the video sample, add filters to it
	and record it on the fly to a new sample (which can be used instantly).

(6)	Frame accurate: In veejay, every frame is a key-frame (a whole image).
	As a consequence, veejay has no support for video codecs that make use of difference frames.

(7)	In trickplay mode, veejay will always resample the audio analogous to varying the speed
	of an analogue tape recorder . Halve the speed results in the pitch going down an octave. 
	Slow motion video is produced by linearly interpolating in-between frames and
	faster motion is accomplished by skipping video frames or, if playing without audio, 
	by changing the framerate dynamically.

(8)	JACK: A low latency audio server that can connect a number of different applications to an audio device,
	allowing them to share audio between themselves. 

(9)	Perspective Viewing: You can define a quadrilateral to which the rendered image will be mapped. 
	This is usefull for setups where the image borders fall outside the projection screen area, or where
	the projector/camera has a (wide) angle to the projection. 
	Last but not least, it can be used for on-body projection performances.





Install
=======

See file 'INSTALL'

See doc/Howto_Compile.html
See doc/Howto_Compile_on_Ubuntu.html

Documentation
=============

See the directory 'doc' in this package, it contains usefull documentation.


First time setup
================

You need to font a TrueType Font file in $HOME/.veejay/fonts


Running
=======

Start 1 or more Veejay servers:
$ veejay my-movie-A.avi
$ veejay -p 4490 my-movie-B.avi
 
CONTACT / FEEDBACK & HELP
=========================

http://veejayhq.net


BUG REPORTS / BLEEDING EDGE SOURCE CODE
=======================================

Please use the ticket system !

http://veejay.dyne.org
http://veejayhq.net

ENJOY! And let us know about your performances/installations with veejay! 

